Reference - GFG , Interviewbit.

1. What is Object Oriented Programming (OOPs)?
-> OOPs is a programming paradigm where the complete software operates as a bunch of objects talking to each other. An object is a collection of data and the methods which operate on that data.

2. Why OOPs?
- Better manageable code.
- OOPs helps users to understand the software easily, even they don’t know the actual implementation.
- Even very big software can be easily written and managed easily using OOPs.

3. What are some major Object Oriented Programming languages?
-> Java, C++, Javascript, Python.

3. What is a Class?
->  It is like a blueprint or template of objects. It is a user-defined data type that contains the data members and member functions that operate on the data members.

4. What is an Object?
-> An object is an instance of a class. It contains the instance of the members and behaviors defined in the class template.

5. What are the main features of OOPs?
-> Encapsulation, Abstraction, Polymorphism, Inheritance.

6. What is Encapsulation?
-> Wrapping up the implementaion of the data member & methods in a class.
Ex. - Car has features like accelerator, brake and it has member like seat tires.

7. What is Abstraction?
-> It means showing only the necessary information and hiding the other irrelevant information from the user. Abstraction is implemented using classes and interfaces.

Ex. - hiding the internal working (Internal and connections of Speaker, Display, Channel mechanism) of TV just focus on Sound, Visuals, Power Input, Channels Input.

8. What is Polymorphism?
-> “Polymorphism” means having many forms. In C++ language, we can define multiple functions having the same name but different working depending on the context.

A. Compile Time Polymorphism
B. Runtime Polymorphism

Complie Time Polymorphysm / Static Polymorphysm / Overloading / Early Binding 
same name but TYPES , ARGUMENTS , RETURN TYPE , ORDERING can be Different.

RunTime Polymorphysm / Dynamic Polymorphysm / Overriding / Late Binding.
When the function name and parameters are the same in the superclass and the child class, it’s called overriding.


9. What is Inheritance?
-> in which one class recieve the property of another class.
   good - code reusability ,to achieve Runtime Polymorphism ,